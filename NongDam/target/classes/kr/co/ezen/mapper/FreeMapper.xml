<?xml version="1.0" encoding="UTF-8"?>


<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

	
	<mapper namespace="kr.co.ezen.mapper.FreeMapper">
	
		<sql id="search">
			<if test="type == 'user_nickname'">
				where user_nickname like concat('%',#{keyword},'%')
			</if> 
			<if test="type == 'free_title'">
				where free_title like concat('%',#{keyword},'%')
			</if>
			<if test="type != null and tag != null">
				and free_tag=#{tag}
			</if>
			<if test="type == null and tag != null">
				where free_tag=#{tag}
			</if>
		</sql>
		
		<select id="findAll" resultType="kr.co.ezen.entity.Free" parameterType="kr.co.ezen.entity.Criteria">
			select free_title,free_content,free_date,free_tag,user_nickname,user_idx,free_idx,free_count from free natural join User
			<include refid="search"/>
			order by free_idx desc
			limit #{pageStart}, #{perPageNum}
		</select>
	
		
		
	
		<select id="findByidx" resultType="kr.co.ezen.entity.Free" parameterType="int">
			select free_title,free_content,free_date,free_tag,user_nickname,user_idx,free_idx 
			from free natural join User 
			where free_idx=#{free_idx}
		</select>
		
		<insert id="insert" parameterType="kr.co.ezen.entity.Free">
		    insert into free (free_idx, free_title, free_content, free_date, free_tag, free_count, user_idx) 
		    values (#{free_idx}, #{free_title}, #{free_content}, now(), #{free_tag}, #{free_count}, #{user_idx})
		</insert>
		
		<select id="getUserIdx" resultType="kr.co.ezen.entity.Free" parameterType="int">
			select user_idx from User where user_nickname=#{user_nickname}
		</select>
		
		<select id="totalCount" resultType="int" parameterType="kr.co.ezen.entity.Criteria">
			   select count(*) from free natural join User
			   <include refid="search"/>
		</select>
		
		<update id="updatecnt" parameterType="int">
		        update free
		        set free_count = free_count + 1
		        where free_idx = #{free_idx}
		</update>
		
		<delete id="deleteByIdx" parameterType="int">
				delete from free where free_idx=#{free_idx}
		</delete>
		
		<update id="updateByIdx" parameterType="kr.co.ezen.entity.Free">
				update free set free_title=#{free_title}, free_content=#{free_content}, free_tag=#{free_tag}
				where free_idx=#{free_idx}
		</update>
	
	

		<!-- 댓글 -->
		
		<select id="findAllComment" parameterType="int"
			resultType="kr.co.ezen.entity.FreeComment">
				select free_parent_idx,free_comment_idx,user_idx,user_nickname,free_comment_time,free_comment_content,free_comment_useable
				from freeComment natural join User where free_idx=#{free_idx}
				order by free_parent_idx desc, free_comment_idx
		</select>
		
		<insert id="insertComment" parameterType="kr.co.ezen.entity.FreeComment">
				<selectKey order="BEFORE" keyProperty="free_parent_idx" resultType="int">
					select IFNULL(max(free_comment_idx)+1,1) as free_parent_idx from freeComment
				</selectKey>
				insert into freeComment (free_idx,free_parent_idx,user_idx,free_comment_content,free_comment_useable) 
				values (#{free_idx},#{free_parent_idx},#{user_idx},#{free_comment_content},1)
		</insert> 
		
		<delete id="deleteCommentByIdx" parameterType="int">
			update freeComment set free_comment_useable=0 where free_comment_idx=#{free_comment_idx}
		</delete> 
		
		<delete id="deleteCommentByFree_idx" parameterType="int">
			delete from free_comment where free_idx=#{free_idx}
		</delete> 
		
		<update id="updateCommentByIdx" parameterType="kr.co.ezen.entity.FreeComment">
				update freeComment set free_comment_content=#{free_comment_content}
				where free_comment_idx=#{free_comment_idx}
		</update>
	
		<insert id="insertReplyComment" parameterType="kr.co.ezen.entity.FreeComment">
			insert into freeComment (free_idx,free_parent_idx,user_idx,free_comment_content,free_comment_useable) 
			values (#{free_idx},#{free_parent_idx},#{user_idx},#{free_comment_content},1)
		</insert>

	</mapper>
	